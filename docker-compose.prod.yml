version: "3"
# Not finished
services:
    server:
        container_name: gql-test-server
        env_file: .env
        volumes:
            # - .:/usr/src/app
            - /usr/src/app/node_modules
        depends_on:
            - postgres
            - redis
        networks:
            - postgres
            - redis
        ports:
            - ${PORT}:${PORT}
        build:
            context: ./docker/Dockerfile.prod
            args:
                mode: production

    postgres:
        container_name: gql-test-postgres
        image: postgres:latest
        env_file: .env
        environment:
            POSTGRES_DATABASE: ${PG_DATABASE}
            POSTGRES_USER: ${PG_USER}
            POSTGRES_PASSWORD: ${PG_PASSWORD}
            PGDATA: /var/lib/postgresql/data
        # command: "postgres -c config_file=/usr/local/etc/postgres/postgres.conf"
        ports:
            - "${PG_PORT}:${PG_PORT}"
        volumes:
            # - "./docker/postgres.conf:/usr/local/etc/postgres/postgres.conf"
            - "/var/run/postgres/postgres.sock"
            - "./docker/data/postgres:/var/lib/postgresql/data"
        networks:
            - postgres
        restart: unless-stopped
   
    redis:
        container_name: gql-test-redis
        image: redis
        command: redis-server /usr/local/etc/redis/redis.conf
        volumes:
            - redis:/usr/local/etc/redis/data
            - ./docker/config/redis.conf:/usr/local/etc/redis/redis.conf
        networks:
            - redis
        ports:
            - ${RD_PORT}:${RD_PORT}
        expose:
            - ${RD_PORT}

    redis-commander:
        container_name: gql-test-redis-commander
        hostname: redis-commander
        image: rediscommander/redis-commander:latest
        environment:
            - REDIS_HOSTS=local:redis:${RD_PORT}
        networks:
            - redis
        ports:
            - ${RDC_PORT}:${RDC_PORT}
volumes:
    redis:
    pgdata:
        driver: local
    
networks:
    postgres:
        driver: bridge
    redis:
        driver: bridge